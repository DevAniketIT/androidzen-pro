# Network Emulation Configuration
# Comprehensive network condition testing for realistic scenarios

network_emulation:
  name: "AndroidZen Network Testing Lab"
  version: "1.0"

# Network Emulation Tools
tools:
  tc_netem:
    enabled: true
    description: "Linux Traffic Control Network Emulation"
    installation: "tc qdisc add dev eth0 root netem"
    
  toxiproxy:
    enabled: true
    description: "Chaos engineering tool for network conditions"
    endpoint: "http://localhost:8474"
    
  comcast:
    enabled: true
    description: "Network link conditioner for testing"
    platform: "macOS/Linux"
    
  wan_simulator:
    enabled: true
    description: "Hardware WAN simulator for physical testing"
    model: "Apposite Netropy"

# Network Condition Profiles
network_conditions:
  # High Latency Scenarios
  high_latency:
    - name: "satellite_connection"
      description: "Satellite internet connection"
      latency:
        delay: "500ms"
        jitter: "50ms"
      bandwidth:
        upload: "1mbps"
        download: "10mbps"
      packet_loss: "0.1%"
      test_scenarios:
        - device_enrollment
        - policy_sync
        - app_download
        
    - name: "3g_mobile"
      description: "3G mobile connection"
      latency:
        delay: "300ms"
        jitter: "100ms"
      bandwidth:
        upload: "384kbps"
        download: "2mbps"
      packet_loss: "1%"
      test_scenarios:
        - real_time_monitoring
        - command_execution
        
    - name: "edge_network"
      description: "EDGE network connection"
      latency:
        delay: "600ms"
        jitter: "200ms"
      bandwidth:
        upload: "100kbps"
        download: "384kbps"
      packet_loss: "2%"
      test_scenarios:
        - basic_connectivity
        - heartbeat_messages

  # Packet Loss Scenarios
  packet_loss:
    - name: "poor_wifi"
      description: "Poor WiFi with interference"
      latency:
        delay: "50ms"
        jitter: "20ms"
      bandwidth:
        upload: "5mbps"
        download: "25mbps"
      packet_loss: "5%"
      packet_corruption: "0.1%"
      
    - name: "congested_network"
      description: "Network congestion scenario"
      latency:
        delay: "100ms"
        jitter: "50ms"
      bandwidth:
        upload: "2mbps" 
        download: "10mbps"
      packet_loss: "10%"
      
    - name: "unstable_connection"
      description: "Highly unstable connection"
      latency:
        delay: "200ms"
        jitter: "150ms"
      bandwidth:
        upload: "500kbps"
        download: "2mbps"
      packet_loss: "15%"
      packet_duplication: "1%"

  # Captive Portal Scenarios
  captive_portal:
    - name: "hotel_wifi"
      description: "Hotel WiFi with login portal"
      portal_type: "web_based"
      redirect_url: "http://captive.portal.local/login"
      authentication:
        method: "username_password"
        auto_redirect: true
      test_scenarios:
        - initial_connection_blocked
        - post_authentication_access
        - session_timeout
        
    - name: "corporate_guest"
      description: "Corporate guest network"
      portal_type: "terms_acceptance"
      redirect_url: "http://guest.company.com/terms"
      authentication:
        method: "click_through"
        session_duration: "4h"
      restrictions:
        - block_p2p
        - limit_bandwidth
        - restrict_ports: [22, 23, 3389]
        
    - name: "airport_wifi"
      description: "Airport WiFi with ads"
      portal_type: "advertisement"
      redirect_url: "http://airport-wifi.com/portal"
      authentication:
        method: "watch_ad"
        ad_duration: "30s"
      bandwidth_limit:
        free_tier: "1mbps"
        premium_tier: "10mbps"

  # Proxy Scenarios
  proxy_configurations:
    - name: "corporate_proxy"
      description: "Corporate HTTP proxy"
      proxy_type: "http"
      proxy_host: "proxy.corporate.local"
      proxy_port: 8080
      authentication:
        required: true
        method: "basic"
        username: "{{PROXY_USERNAME}}"
        password: "{{PROXY_PASSWORD}}"
      bypass_rules:
        - "*.internal.com"
        - "localhost"
        - "127.0.0.1"
        
    - name: "transparent_proxy"
      description: "Transparent intercepting proxy"
      proxy_type: "transparent"
      intercept_ports: [80, 443]
      ssl_inspection: true
      content_filtering:
        enabled: true
        blocked_categories:
          - "social_media"
          - "streaming"
          
    - name: "socks_proxy"
      description: "SOCKS5 proxy connection"
      proxy_type: "socks5"
      proxy_host: "socks.proxy.local"
      proxy_port: 1080
      authentication:
        required: false
      dns_resolution: "remote"
      
    - name: "chain_proxy"
      description: "Chained proxy configuration"
      proxy_type: "chain"
      proxies:
        - type: "http"
          host: "proxy1.example.com"
          port: 8080
        - type: "socks5"
          host: "proxy2.example.com"
          port: 1080

  # Metered Connection Scenarios
  metered_connections:
    - name: "mobile_data_limited"
      description: "Limited mobile data plan"
      connection_type: "cellular"
      data_limit: "1GB"
      warning_threshold: "800MB"
      speed_throttling:
        after_limit: "128kbps"
      cost_per_mb: "$0.10"
      
    - name: "pay_per_use_wifi"
      description: "Hotel pay-per-use WiFi"
      connection_type: "wifi"
      billing_method: "time_based"
      rate: "$0.25/minute"
      free_allowance: "15min"
      speed_tiers:
        basic: "1mbps"
        premium: "10mbps"
        
    - name: "roaming_data"
      description: "International roaming data"
      connection_type: "cellular"
      roaming: true
      data_limit: "100MB"
      cost_per_mb: "$2.00"
      speed_throttling:
        after_limit: "64kbps"

# Network Testing Infrastructure
infrastructure:
  # Physical Network Lab
  physical_lab:
    switches:
      - model: "Cisco Catalyst 2960"
        ports: 24
        vlans:
          - id: 100
            name: "device_lab"
          - id: 200
            name: "management"
          - id: 300
            name: "guest"
            
    routers:
      - model: "Cisco ISR 4331"
        wan_interfaces: 2
        lan_interfaces: 4
        firewall_rules:
          - allow_icmp
          - allow_http_https
          - block_p2p
          
    access_points:
      - model: "Ubiquiti UniFi AP"
        ssids:
          - name: "DeviceLab-Secure"
            security: "WPA3"
            vlan: 100
          - name: "DeviceLab-Guest"
            security: "Open"
            vlan: 300
            portal: true

  # Virtual Network Lab
  virtual_lab:
    containerized_network:
      enabled: true
      platform: "docker"
      networks:
        - name: "androidzen-test-network"
          driver: "bridge"
          subnet: "192.168.100.0/24"
          
    network_namespaces:
      enabled: true
      namespaces:
        - name: "high-latency-ns"
          conditions: ["satellite_connection"]
        - name: "packet-loss-ns"
          conditions: ["poor_wifi"]
          
    software_defined_network:
      enabled: true
      controller: "openvswitch"
      flows:
        - match: "tcp,tp_dst=443"
          action: "apply_latency(500ms)"
        - match: "udp"
          action: "apply_packet_loss(5%)"

# Test Scenarios Implementation
test_scenarios:
  device_enrollment:
    description: "Test device enrollment under various network conditions"
    steps:
      - apply_network_condition
      - initiate_enrollment
      - measure_completion_time
      - verify_enrollment_success
    success_criteria:
      max_completion_time: "5min"
      min_success_rate: "95%"
      
  policy_synchronization:
    description: "Test policy sync with network challenges"
    steps:
      - establish_baseline
      - apply_network_condition
      - trigger_policy_sync
      - measure_sync_time
      - verify_policy_application
    success_criteria:
      max_sync_time: "2min"
      policy_accuracy: "100%"
      
  real_time_monitoring:
    description: "Test real-time device monitoring"
    steps:
      - establish_websocket_connection
      - apply_network_condition
      - monitor_connection_stability
      - measure_message_latency
      - verify_data_integrity
    success_criteria:
      max_message_latency: "5s"
      connection_uptime: "99%"
      
  app_distribution:
    description: "Test app installation over various networks"
    steps:
      - select_test_app
      - apply_network_condition
      - initiate_app_download
      - monitor_download_progress
      - verify_installation
    success_criteria:
      max_download_time: "10min"
      installation_success_rate: "98%"

# Monitoring and Metrics
monitoring:
  network_metrics:
    - name: "latency"
      measurement: "round_trip_time"
      alert_threshold: "1000ms"
      
    - name: "throughput"
      measurement: "bits_per_second"
      alert_threshold: "100kbps"
      
    - name: "packet_loss"
      measurement: "percentage"
      alert_threshold: "20%"
      
    - name: "jitter"
      measurement: "milliseconds"
      alert_threshold: "200ms"
      
  application_metrics:
    - name: "connection_establishment_time"
      measurement: "seconds"
      alert_threshold: "30s"
      
    - name: "api_response_time"
      measurement: "milliseconds"
      alert_threshold: "5000ms"
      
    - name: "websocket_reconnection_rate"
      measurement: "per_hour"
      alert_threshold: "10"

# Automation Scripts
automation:
  network_condition_applier:
    script: "scripts/apply_network_condition.py"
    parameters:
      - condition_name
      - target_interface
      - duration
      
  test_runner:
    script: "scripts/run_network_tests.py"
    parameters:
      - test_scenario
      - device_list
      - network_conditions
      
  results_collector:
    script: "scripts/collect_results.py"
    output_format: "json"
    storage_location: "s3://androidzen-test-results/network-tests/"

# Integration with CI/CD
ci_integration:
  jenkins:
    pipeline: "network-condition-tests"
    triggers:
      - "PR_created"
      - "daily_schedule"
      
  github_actions:
    workflow: ".github/workflows/network-tests.yml"
    matrix:
      network_conditions:
        - "high_latency"
        - "packet_loss"
        - "captive_portal"
      devices:
        - "android-10"
        - "android-11"
        - "android-12"
        - "android-13"
        - "android-14"
