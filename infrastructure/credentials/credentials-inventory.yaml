# Credentials Inventory
# Comprehensive credential management with least privilege access principles

credentials_inventory:
  name: "AndroidZen Credentials Management"
  version: "1.0"
  last_updated: "2024-01-01"
  security_policy: "least_privilege_principle"

# Credential Management Platform
management_platform:
  primary_vault:
    provider: "hashicorp_vault"
    version: "1.15"
    cluster_configuration:
      nodes: 3
      replication: "raft"
      auto_unseal: "aws_kms"
    access_methods:
      - "kubernetes_auth"
      - "jwt_auth" 
      - "userpass_auth"
      
  backup_vault:
    provider: "aws_secrets_manager"
    region: "us-west-2"
    encryption: "aws_kms"
    cross_region_replication: true
    
  secret_scanning:
    tools:
      - "truffleHog"
      - "gitleaks"
      - "detect-secrets"
    schedule: "on_commit"

# Service Account Management
service_accounts:
  google_services:
    zero_touch_provisioning:
      account_name: "androidzen-ztp-service"
      email: "androidzen-ztp-service@androidzen-project.iam.gserviceaccount.com"
      key_type: "json"
      permissions:
        - "androiddeviceprovisioning.customers.list"
        - "androiddeviceprovisioning.customers.dpcs.list"
        - "androiddeviceprovisioning.customers.devices.create"
        - "androiddeviceprovisioning.customers.devices.get"
        - "androiddeviceprovisioning.customers.devices.update"
      rotation_schedule: "90_days"
      usage_scope: "device_lab_only"
      
    managed_google_play:
      account_name: "androidzen-mgp-service"
      email: "androidzen-mgp-service@androidzen-project.iam.gserviceaccount.com"
      key_type: "json"
      permissions:
        - "androidenterprise.enterprises.get"
        - "androidenterprise.products.list"
        - "androidenterprise.products.approve"
        - "androidenterprise.installs.list"
        - "androidenterprise.installs.update"
      rotation_schedule: "90_days"
      usage_scope: "app_management"
      
    firebase_cloud_messaging:
      account_name: "androidzen-fcm-service"
      email: "androidzen-fcm-service@androidzen-project.iam.gserviceaccount.com"
      key_type: "json"
      permissions:
        - "firebase.projects.get"
        - "cloudmessaging.messages.create"
      rotation_schedule: "90_days"
      usage_scope: "push_notifications"
      
  aws_services:
    device_farm_access:
      account_name: "androidzen-devicefarm"
      access_key_id: "{{AWS_DEVICEFARM_ACCESS_KEY}}"
      secret_access_key: "{{AWS_DEVICEFARM_SECRET_KEY}}"
      permissions:
        - "devicefarm:ListProjects"
        - "devicefarm:CreateProject"
        - "devicefarm:ListDevicePools"
        - "devicefarm:CreateUpload"
        - "devicefarm:ScheduleRun"
        - "devicefarm:GetRun"
        - "devicefarm:ListArtifacts"
      rotation_schedule: "60_days"
      mfa_required: true
      
    s3_data_storage:
      account_name: "androidzen-data-storage"
      access_key_id: "{{AWS_S3_ACCESS_KEY}}"
      secret_access_key: "{{AWS_S3_SECRET_KEY}}"
      permissions:
        - "s3:GetObject"
        - "s3:PutObject"
        - "s3:DeleteObject"
        - "s3:ListBucket"
      bucket_access:
        - "androidzen-data-raw"
        - "androidzen-data-processed"
        - "androidzen-test-results"
      rotation_schedule: "60_days"
      
  azure_services:
    azure_ad_integration:
      tenant_id: "{{AZURE_TENANT_ID}}"
      application_id: "{{AZURE_APPLICATION_ID}}"
      client_secret: "{{AZURE_CLIENT_SECRET}}"
      permissions:
        - "User.Read"
        - "Directory.Read.All"
        - "Application.ReadWrite.OwnedBy"
        - "DeviceManagementConfiguration.ReadWrite.All"
      rotation_schedule: "90_days"
      conditional_access_exempt: false

# Database Credentials
database_credentials:
  postgresql_primary:
    username: "androidzen_app"
    password: "{{POSTGRES_APP_PASSWORD}}"
    host: "postgres-primary.internal"
    port: 5432
    database: "androidzen_production"
    ssl_mode: "require"
    connection_pooling: true
    max_connections: 20
    permissions:
      - "CONNECT"
      - "SELECT ON device_data"
      - "INSERT ON device_data"
      - "UPDATE ON device_data"
      - "SELECT ON analytics_data"
    rotation_schedule: "30_days"
    
  redis_cache:
    username: "androidzen_cache"
    password: "{{REDIS_PASSWORD}}"
    host: "redis-cluster.internal"
    port: 6379
    ssl_enabled: true
    cluster_mode: true
    permissions:
      - "read"
      - "write"
      - "no_dangerous_commands"
    rotation_schedule: "30_days"
    
  monitoring_database:
    username: "androidzen_monitoring"
    password: "{{MONITORING_DB_PASSWORD}}"
    host: "monitoring-db.internal"
    port: 5432
    database: "monitoring"
    permissions:
      - "CONNECT"
      - "INSERT ON metrics"
      - "SELECT ON metrics"
    rotation_schedule: "30_days"

# API Keys and Tokens
api_credentials:
  okta_integration:
    api_token: "{{OKTA_API_TOKEN}}"
    domain: "{{OKTA_DOMAIN}}"
    client_id: "{{OKTA_CLIENT_ID}}"
    client_secret: "{{OKTA_CLIENT_SECRET}}"
    scopes:
      - "okta.users.read"
      - "okta.groups.read"
      - "okta.apps.read"
    rate_limits:
      requests_per_minute: 100
      concurrent_connections: 10
    rotation_schedule: "120_days"
    
  teamviewer_remote:
    api_token: "{{TEAMVIEWER_API_TOKEN}}"
    company_id: "{{TEAMVIEWER_COMPANY_ID}}"
    permissions:
      - "computers.read"
      - "computers.remote_control"
      - "sessions.create"
    usage_restrictions:
      allowed_ip_ranges:
        - "192.168.1.0/24"
        - "10.0.0.0/8"
    rotation_schedule: "180_days"
    
  github_integration:
    personal_access_token: "{{GITHUB_PAT}}"
    scopes:
      - "repo"
      - "workflow"
      - "read:packages"
    repository_access:
      - "androidzen-pro"
      - "androidzen-device-policies"
    rotation_schedule: "90_days"
    
  docker_registry:
    username: "androidzen_registry"
    password: "{{DOCKER_REGISTRY_PASSWORD}}"
    registry_url: "registry.androidzen.com"
    permissions:
      - "pull"
      - "push"
    repository_access:
      - "androidzen/backend"
      - "androidzen/frontend"
      - "androidzen/device-agent"
    rotation_schedule: "60_days"

# Certificate Management
certificates:
  tls_certificates:
    wildcard_cert:
      common_name: "*.androidzen.com"
      sans:
        - "androidzen.com"
        - "api.androidzen.com"
        - "staging.androidzen.com"
      issuer: "lets_encrypt"
      key_size: 2048
      validity_period: "90_days"
      auto_renewal: true
      deployment_locations:
        - "ingress_controller"
        - "load_balancer"
        
    internal_ca_cert:
      common_name: "AndroidZen Internal CA"
      key_size: 4096
      validity_period: "10_years"
      usage:
        - "certificate_signing"
        - "crl_signing"
      storage_location: "hsm"
      
  client_certificates:
    device_authentication:
      template_name: "device_identity_template"
      key_size: 2048
      validity_period: "365_days"
      extended_key_usage:
        - "client_authentication"
      subject_format: "CN={{DEVICE_ID}},O=AndroidZen,C=US"
      auto_enrollment: true
      
    admin_certificates:
      template_name: "admin_identity_template"
      key_size: 2048
      validity_period: "180_days"
      extended_key_usage:
        - "client_authentication"
        - "smart_card_logon"
      subject_format: "CN={{ADMIN_NAME}},O=AndroidZen,C=US"
      smart_card_required: true

# Access Control Matrices
access_control:
  role_definitions:
    device_lab_administrator:
      description: "Full access to device lab management"
      credentials_access:
        - "google_zero_touch/*:read_write"
        - "managed_google_play/*:read_write"
        - "firebase_cloud_messaging/*:read"
        - "device_farm_access:read_write"
        - "device_certificates:issue_revoke"
      restrictions:
        - "production_database:no_access"
        - "user_data:no_access"
      time_restrictions:
        business_hours_only: false
        max_session_duration: "8_hours"
        
    qa_engineer:
      description: "Testing and quality assurance access"
      credentials_access:
        - "test_database/*:read_write"
        - "synthetic_data/*:read"
        - "device_farm_access:read"
        - "api_test_keys/*:read"
      restrictions:
        - "production_credentials:no_access"
        - "certificate_signing:no_access"
      time_restrictions:
        business_hours_only: true
        max_session_duration: "4_hours"
        
    security_engineer:
      description: "Security monitoring and incident response"
      credentials_access:
        - "audit_logs/*:read"
        - "security_monitoring/*:read_write"
        - "certificate_management/*:read"
        - "vault_audit/*:read"
      restrictions:
        - "service_credentials:read_only"
      time_restrictions:
        business_hours_only: false
        max_session_duration: "12_hours"
        emergency_access: true
        
    developer:
      description: "Development environment access"
      credentials_access:
        - "development_database/*:read_write"
        - "staging_api_keys/*:read"
        - "docker_registry:pull"
        - "github_integration:read"
      restrictions:
        - "production_credentials:no_access"
        - "device_lab:no_access"
      time_restrictions:
        business_hours_only: true
        max_session_duration: "8_hours"

# Credential Rotation Policies
rotation_policies:
  automatic_rotation:
    high_privilege_accounts:
      schedule: "30_days"
      notification_advance: "7_days"
      rollback_capability: true
      
    service_accounts:
      schedule: "90_days"
      notification_advance: "14_days"
      zero_downtime_rotation: true
      
    api_keys:
      schedule: "120_days"
      overlap_period: "7_days"
      validation_required: true
      
  emergency_rotation:
    triggers:
      - "credential_compromise"
      - "security_incident"
      - "employee_termination"
    execution_time: "within_1_hour"
    approval_required: false
    automated_notification: true
    
# Monitoring and Auditing
monitoring:
  access_logging:
    enabled: true
    log_retention: "7_years"
    real_time_alerting: true
    anomaly_detection: true
    
  credential_usage_tracking:
    metrics:
      - "authentication_attempts"
      - "successful_authentications"
      - "failed_authentications"
      - "credential_rotation_events"
      - "privilege_escalation_events"
      
  security_alerts:
    - trigger: "multiple_failed_authentications"
      threshold: "5_attempts_in_5_minutes"
      action: "temporary_account_lock"
      
    - trigger: "unusual_access_pattern"
      detection: "ml_based_anomaly_detection"
      action: "security_team_notification"
      
    - trigger: "credential_about_to_expire"
      advance_warning: "7_days"
      action: "automated_renewal_or_notification"
      
    - trigger: "unauthorized_credential_access"
      detection: "access_outside_business_hours"
      action: "immediate_alert_and_audit"

# Compliance and Governance
compliance:
  regulatory_requirements:
    - "SOC 2 Type II"
    - "ISO 27001"
    - "NIST Cybersecurity Framework"
    - "GDPR Article 32"
    
  audit_procedures:
    quarterly_access_review:
      scope: "all_privileged_accounts"
      reviewer: "security_team_lead"
      documentation_required: true
      
    annual_permission_audit:
      scope: "all_service_accounts"
      reviewer: "external_auditor"
      compliance_attestation: true
      
    monthly_rotation_compliance:
      scope: "rotation_schedule_adherence"
      automated_reporting: true
      
  documentation_requirements:
    credential_inventory:
      update_frequency: "monthly"
      approval_required: "security_manager"
      
    access_control_matrix:
      update_frequency: "quarterly"
      approval_required: "ciso"
      
    incident_response_procedures:
      update_frequency: "annually"
      approval_required: "security_committee"

# Emergency Procedures
emergency_procedures:
  credential_compromise_response:
    immediate_actions:
      - "disable_compromised_credential"
      - "notify_security_team"
      - "initiate_incident_response"
      - "begin_forensic_investigation"
      
    recovery_actions:
      - "rotate_all_related_credentials"
      - "update_access_control_lists"
      - "verify_system_integrity"
      - "document_lessons_learned"
      
  mass_credential_rotation:
    triggers:
      - "security_breach"
      - "insider_threat"
      - "regulatory_requirement"
      
    execution_plan:
      - "prioritize_critical_systems"
      - "coordinate_with_service_owners"
      - "execute_in_maintenance_windows"
      - "verify_service_continuity"
      
# Integration Points
integrations:
  ci_cd_pipelines:
    credential_injection:
      method: "vault_agent_sidecar"
      just_in_time_access: true
      lease_duration: "1_hour"
      
  monitoring_systems:
    siem_integration:
      log_forwarding: true
      alert_correlation: true
      threat_intelligence: true
      
  identity_providers:
    federated_authentication:
      providers:
        - "azure_ad"
        - "okta"
        - "google_workspace"
      just_in_time_provisioning: true
