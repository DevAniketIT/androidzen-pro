repos:
  # Secrets Detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        language: python
        entry: detect-secrets-hook
        types: [text]
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            .*\.lock$|
            .*\.min\.js$|
            .*\.min\.css$|
            package-lock\.json$|
            yarn\.lock$
          )$

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.0
    hooks:
      - id: gitleaks
        name: GitLeaks
        entry: gitleaks detect
        language: golang
        types: [text]

  # Python Code Quality
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        name: Black Python Formatter
        language_version: python3
        files: \.py$

  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: Sort imports
        files: \.py$

  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        name: Flake8 linter
        files: \.py$
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
          - flake8-builtins

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Bandit security linter
        files: \.py$
        args: ['-r', 'backend/', '-f', 'json', '-o', 'bandit-report.json']
        exclude: ^backend/tests/

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        name: MyPy type checker
        files: \.py$
        additional_dependencies: [types-all]
        args: [--ignore-missing-imports]

  # JavaScript/TypeScript Code Quality
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.52.0
    hooks:
      - id: eslint
        name: ESLint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@8.52.0
          - eslint-plugin-security@1.7.1
          - "@typescript-eslint/eslint-plugin@6.9.0"
          - "@typescript-eslint/parser@6.9.0"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        name: Prettier formatter
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yaml|yml)$

  # General Code Quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-xml
        name: Check XML syntax
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: check-symlinks
        name: Check for broken symlinks
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-executables-have-shebangs
        name: Check executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check shebang scripts are executable
      - id: mixed-line-ending
        name: Check mixed line endings
        args: ['--fix=lf']

  # Docker
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.1-beta
    hooks:
      - id: hadolint-docker
        name: Hadolint Dockerfile linter

  # Infrastructure as Code
  - repo: https://github.com/terraform-docs/terraform-docs
    rev: v0.16.0
    hooks:
      - id: terraform-docs-go
        name: Terraform docs
        args: ['markdown', 'table', '--output-file', 'README.md', './terraform/']

  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.5
    hooks:
      - id: terraform_fmt
        name: Terraform format
      - id: terraform_validate
        name: Terraform validate
      - id: terraform_tflint
        name: Terraform lint
      - id: terragrunt_fmt
        name: Terragrunt format

  # Ansible
  - repo: https://github.com/ansible/ansible-lint
    rev: v6.21.1
    hooks:
      - id: ansible-lint
        name: Ansible lint

  # Security Scans
  - repo: https://github.com/PyCQA/safety
    rev: 2.3.5
    hooks:
      - id: safety
        name: Safety dependency scanner
        files: requirements.*\.txt$
        args: ['--json', '--output', 'safety-report.json']

  # License checking
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        name: Insert license header
        files: \.(py|js|ts|java|kt)$
        args:
          - --license-filepath
          - LICENSE
          - --comment-style
          - //

default_language_version:
  python: python3.11
  node: '18'

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
